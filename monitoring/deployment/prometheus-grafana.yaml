api_version: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '6'
    meta.helm.sh/release-name: prometheus
    meta.helm.sh/release-namespace: monitoring
  creation_timestamp: '2024-09-25T19:00:14+00:00'
  deletion_grace_period_seconds: null
  deletion_timestamp: null
  finalizers: null
  generate_name: null
  generation: 6
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 11.2.0
    helm.sh/chart: grafana-8.5.1
  managed_fields:
  - api_version: apps/v1
    fields_type: FieldsV1
    fields_v1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:checksum/config: {}
              f:checksum/sc-dashboard-provider-config: {}
              f:checksum/secret: {}
              f:kubectl.kubernetes.io/default-container: {}
            f:labels:
              .: {}
              f:app.kubernetes.io/instance: {}
              f:app.kubernetes.io/name: {}
          f:spec:
            f:automountServiceAccountToken: {}
            f:containers:
              k:{"name":"grafana"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"GF_PATHS_DATA"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"GF_PATHS_LOGS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"GF_PATHS_PLUGINS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"GF_PATHS_PROVISIONING"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"GF_SECURITY_ADMIN_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"GF_SECURITY_ADMIN_USER"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"POD_IP"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":3000,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9094,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9094,"protocol":"UDP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:drop: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/grafana/grafana.ini"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/etc/grafana/provisioning/datasources"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/tmp/dashboards"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/grafana"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"grafana-sc-dashboard"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"FOLDER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"LABEL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"LABEL_VALUE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"METHOD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_METHOD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"REQ_URL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_USERNAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"RESOURCE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:drop: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/tmp/dashboards"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"grafana-sc-datasources"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"FOLDER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"LABEL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"LABEL_VALUE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"METHOD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_METHOD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"REQ_URL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REQ_USERNAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef: {}
                  k:{"name":"RESOURCE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:drop: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/grafana/provisioning/datasources"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:enableServiceLinks: {}
            f:initContainers:
              .: {}
              k:{"name":"init-chown-data"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                  f:runAsNonRoot: {}
                  f:runAsUser: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/lib/grafana"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:fsGroup: {}
              f:runAsGroup: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"sc-dashboard-provider"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"sc-dashboard-volume"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"sc-datasources-volume"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"storage"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
    manager: helm
    operation: Update
    subresource: null
    time: '2024-09-25T19:00:14+00:00'
  - api_version: apps/v1
    fields_type: FieldsV1
    fields_v1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"grafana"}:
                f:volumeMounts:
                  k:{"mountPath":"/etc/grafana/ldap.toml"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
            f:volumes:
              k:{"name":"grafana-alert-rules"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-alert-rules-volume"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"ldap-config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
    manager: kubectl-edit
    operation: Update
    subresource: null
    time: '2024-10-03T01:38:23+00:00'
  - api_version: apps/v1
    fields_type: FieldsV1
    fields_v1:
      f:spec:
        f:template:
          f:metadata:
            f:annotations:
              f:kubectl.kubernetes.io/restartedAt: {}
    manager: kubectl-rollout
    operation: Update
    subresource: null
    time: '2024-10-04T20:17:16+00:00'
  - api_version: apps/v1
    fields_type: FieldsV1
    fields_v1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: '2024-11-22T15:46:59+00:00'
  name: prometheus-grafana
  namespace: monitoring
  owner_references: null
  resource_version: '17663588'
  self_link: null
  uid: c8736b13-ca20-439e-8871-bb62939ac3d2
spec:
  min_ready_seconds: null
  paused: null
  progress_deadline_seconds: 600
  replicas: 1
  revision_history_limit: 10
  selector:
    match_expressions: null
    match_labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: grafana
  strategy:
    rolling_update:
      max_surge: 25%
      max_unavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
        checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
        checksum/secret: 032056e9c62bbe9d1daa41ee49cd3d9524c076f51ca4c65adadf4ef08ef28712
        kubectl.kubernetes.io/default-container: grafana
        kubectl.kubernetes.io/restartedAt: '2024-10-04T15:17:16-05:00'
      creation_timestamp: null
      deletion_grace_period_seconds: null
      deletion_timestamp: null
      finalizers: null
      generate_name: null
      generation: null
      labels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: grafana
      managed_fields: null
      name: null
      namespace: null
      owner_references: null
      resource_version: null
      self_link: null
      uid: null
    spec:
      active_deadline_seconds: null
      affinity: null
      automount_service_account_token: true
      containers:
      - args: null
        command: null
        env:
        - name: METHOD
          value: WATCH
          value_from: null
        - name: LABEL
          value: grafana_dashboard
          value_from: null
        - name: LABEL_VALUE
          value: '1'
          value_from: null
        - name: FOLDER
          value: /tmp/dashboards
          value_from: null
        - name: RESOURCE
          value: both
          value_from: null
        - name: NAMESPACE
          value: ALL
          value_from: null
        - name: REQ_USERNAME
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-user
              name: prometheus-grafana
              optional: null
        - name: REQ_PASSWORD
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-password
              name: prometheus-grafana
              optional: null
        - name: REQ_URL
          value: http://localhost:3000/api/admin/provisioning/dashboards/reload
          value_from: null
        - name: REQ_METHOD
          value: POST
          value_from: null
        env_from: null
        image: quay.io/kiwigrid/k8s-sidecar:1.27.4
        image_pull_policy: IfNotPresent
        lifecycle: null
        liveness_probe: null
        name: grafana-sc-dashboard
        ports: null
        readiness_probe: null
        resize_policy: null
        resources:
          claims: null
          limits: null
          requests: null
        restart_policy: null
        security_context:
          allow_privilege_escalation: false
          app_armor_profile: null
          capabilities:
            add: null
            drop:
            - ALL
          privileged: null
          proc_mount: null
          read_only_root_filesystem: null
          run_as_group: null
          run_as_non_root: null
          run_as_user: null
          se_linux_options: null
          seccomp_profile:
            localhost_profile: null
            type: RuntimeDefault
          windows_options: null
        startup_probe: null
        stdin: null
        stdin_once: null
        termination_message_path: /dev/termination-log
        termination_message_policy: File
        tty: null
        volume_devices: null
        volume_mounts:
        - mount_path: /tmp/dashboards
          mount_propagation: null
          name: sc-dashboard-volume
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        working_dir: null
      - args: null
        command: null
        env:
        - name: METHOD
          value: WATCH
          value_from: null
        - name: LABEL
          value: grafana_datasource
          value_from: null
        - name: LABEL_VALUE
          value: '1'
          value_from: null
        - name: FOLDER
          value: /etc/grafana/provisioning/datasources
          value_from: null
        - name: RESOURCE
          value: both
          value_from: null
        - name: REQ_USERNAME
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-user
              name: prometheus-grafana
              optional: null
        - name: REQ_PASSWORD
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-password
              name: prometheus-grafana
              optional: null
        - name: REQ_URL
          value: http://localhost:3000/api/admin/provisioning/datasources/reload
          value_from: null
        - name: REQ_METHOD
          value: POST
          value_from: null
        env_from: null
        image: quay.io/kiwigrid/k8s-sidecar:1.27.4
        image_pull_policy: IfNotPresent
        lifecycle: null
        liveness_probe: null
        name: grafana-sc-datasources
        ports: null
        readiness_probe: null
        resize_policy: null
        resources:
          claims: null
          limits: null
          requests: null
        restart_policy: null
        security_context:
          allow_privilege_escalation: false
          app_armor_profile: null
          capabilities:
            add: null
            drop:
            - ALL
          privileged: null
          proc_mount: null
          read_only_root_filesystem: null
          run_as_group: null
          run_as_non_root: null
          run_as_user: null
          se_linux_options: null
          seccomp_profile:
            localhost_profile: null
            type: RuntimeDefault
          windows_options: null
        startup_probe: null
        stdin: null
        stdin_once: null
        termination_message_path: /dev/termination-log
        termination_message_policy: File
        tty: null
        volume_devices: null
        volume_mounts:
        - mount_path: /etc/grafana/provisioning/datasources
          mount_propagation: null
          name: sc-datasources-volume
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        working_dir: null
      - args: null
        command: null
        env:
        - name: POD_IP
          value: null
          value_from:
            config_map_key_ref: null
            field_ref:
              api_version: v1
              field_path: status.podIP
            resource_field_ref: null
            secret_key_ref: null
        - name: GF_SECURITY_ADMIN_USER
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-user
              name: prometheus-grafana
              optional: null
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: null
          value_from:
            config_map_key_ref: null
            field_ref: null
            resource_field_ref: null
            secret_key_ref:
              key: admin-password
              name: prometheus-grafana
              optional: null
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/
          value_from: null
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
          value_from: null
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
          value_from: null
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
          value_from: null
        env_from: null
        image: docker.io/grafana/grafana:11.2.0
        image_pull_policy: IfNotPresent
        lifecycle: null
        liveness_probe:
          _exec: null
          failure_threshold: 10
          grpc: null
          http_get:
            host: null
            http_headers: null
            path: /api/health
            port: 3000
            scheme: HTTP
          initial_delay_seconds: 60
          period_seconds: 10
          success_threshold: 1
          tcp_socket: null
          termination_grace_period_seconds: null
          timeout_seconds: 30
        name: grafana
        ports:
        - container_port: 3000
          host_ip: null
          host_port: null
          name: grafana
          protocol: TCP
        - container_port: 9094
          host_ip: null
          host_port: null
          name: gossip-tcp
          protocol: TCP
        - container_port: 9094
          host_ip: null
          host_port: null
          name: gossip-udp
          protocol: UDP
        readiness_probe:
          _exec: null
          failure_threshold: 3
          grpc: null
          http_get:
            host: null
            http_headers: null
            path: /api/health
            port: 3000
            scheme: HTTP
          initial_delay_seconds: null
          period_seconds: 10
          success_threshold: 1
          tcp_socket: null
          termination_grace_period_seconds: null
          timeout_seconds: 1
        resize_policy: null
        resources:
          claims: null
          limits: null
          requests: null
        restart_policy: null
        security_context:
          allow_privilege_escalation: false
          app_armor_profile: null
          capabilities:
            add: null
            drop:
            - ALL
          privileged: null
          proc_mount: null
          read_only_root_filesystem: null
          run_as_group: null
          run_as_non_root: null
          run_as_user: null
          se_linux_options: null
          seccomp_profile:
            localhost_profile: null
            type: RuntimeDefault
          windows_options: null
        startup_probe: null
        stdin: null
        stdin_once: null
        termination_message_path: /dev/termination-log
        termination_message_policy: File
        tty: null
        volume_devices: null
        volume_mounts:
        - mount_path: /etc/grafana/grafana.ini
          mount_propagation: null
          name: config
          read_only: null
          recursive_read_only: null
          sub_path: grafana.ini
          sub_path_expr: null
        - mount_path: /var/lib/grafana
          mount_propagation: null
          name: storage
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        - mount_path: /tmp/dashboards
          mount_propagation: null
          name: sc-dashboard-volume
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        - mount_path: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
          mount_propagation: null
          name: sc-dashboard-provider
          read_only: null
          recursive_read_only: null
          sub_path: provider.yaml
          sub_path_expr: null
        - mount_path: /etc/grafana/provisioning/datasources
          mount_propagation: null
          name: sc-datasources-volume
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        - mount_path: /etc/grafana/ldap.toml
          mount_propagation: null
          name: ldap-config
          read_only: null
          recursive_read_only: null
          sub_path: ldap.toml
          sub_path_expr: null
        working_dir: null
      dns_config: null
      dns_policy: ClusterFirst
      enable_service_links: true
      ephemeral_containers: null
      host_aliases: null
      host_ipc: null
      host_network: null
      host_pid: null
      host_users: null
      hostname: null
      image_pull_secrets: null
      init_containers:
      - args: null
        command:
        - chown
        - -R
        - 472:472
        - /var/lib/grafana
        env: null
        env_from: null
        image: docker.io/library/busybox:1.31.1
        image_pull_policy: IfNotPresent
        lifecycle: null
        liveness_probe: null
        name: init-chown-data
        ports: null
        readiness_probe: null
        resize_policy: null
        resources:
          claims: null
          limits: null
          requests: null
        restart_policy: null
        security_context:
          allow_privilege_escalation: null
          app_armor_profile: null
          capabilities:
            add:
            - CHOWN
            drop: null
          privileged: null
          proc_mount: null
          read_only_root_filesystem: null
          run_as_group: null
          run_as_non_root: false
          run_as_user: 0
          se_linux_options: null
          seccomp_profile:
            localhost_profile: null
            type: RuntimeDefault
          windows_options: null
        startup_probe: null
        stdin: null
        stdin_once: null
        termination_message_path: /dev/termination-log
        termination_message_policy: File
        tty: null
        volume_devices: null
        volume_mounts:
        - mount_path: /var/lib/grafana
          mount_propagation: null
          name: storage
          read_only: null
          recursive_read_only: null
          sub_path: null
          sub_path_expr: null
        working_dir: null
      node_name: null
      node_selector: null
      os: null
      overhead: null
      preemption_policy: null
      priority: null
      priority_class_name: null
      readiness_gates: null
      resource_claims: null
      restart_policy: Always
      runtime_class_name: null
      scheduler_name: default-scheduler
      scheduling_gates: null
      security_context:
        app_armor_profile: null
        fs_group: 472
        fs_group_change_policy: null
        run_as_group: 472
        run_as_non_root: true
        run_as_user: 472
        se_linux_options: null
        seccomp_profile: null
        supplemental_groups: null
        supplemental_groups_policy: null
        sysctls: null
        windows_options: null
      service_account: prometheus-grafana
      service_account_name: prometheus-grafana
      set_hostname_as_fqdn: null
      share_process_namespace: null
      subdomain: null
      termination_grace_period_seconds: 30
      tolerations: null
      topology_spread_constraints: null
      volumes:
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map:
          default_mode: 420
          items: null
          name: prometheus-grafana
          optional: null
        csi: null
        downward_api: null
        empty_dir: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: config
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map:
          default_mode: 420
          items: null
          name: ldap-toml-config-map
          optional: null
        csi: null
        downward_api: null
        empty_dir: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: ldap-config
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map: null
        csi: null
        downward_api: null
        empty_dir: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: storage
        nfs: null
        persistent_volume_claim:
          claim_name: prometheus-grafana
          read_only: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map: null
        csi: null
        downward_api: null
        empty_dir:
          medium: null
          size_limit: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: sc-dashboard-volume
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map:
          default_mode: 420
          items: null
          name: prometheus-grafana-config-dashboards
          optional: null
        csi: null
        downward_api: null
        empty_dir: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: sc-dashboard-provider
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map: null
        csi: null
        downward_api: null
        empty_dir:
          medium: null
          size_limit: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: sc-datasources-volume
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map:
          default_mode: 420
          items: null
          name: prometheus-grafana-alert-rules
          optional: null
        csi: null
        downward_api: null
        empty_dir: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: grafana-alert-rules
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
      - aws_elastic_block_store: null
        azure_disk: null
        azure_file: null
        cephfs: null
        cinder: null
        config_map: null
        csi: null
        downward_api: null
        empty_dir:
          medium: null
          size_limit: null
        ephemeral: null
        fc: null
        flex_volume: null
        flocker: null
        gce_persistent_disk: null
        git_repo: null
        glusterfs: null
        host_path: null
        image: null
        iscsi: null
        name: grafana-alert-rules-volume
        nfs: null
        persistent_volume_claim: null
        photon_persistent_disk: null
        portworx_volume: null
        projected: null
        quobyte: null
        rbd: null
        scale_io: null
        secret: null
        storageos: null
        vsphere_volume: null
status:
  available_replicas: 1
  collision_count: null
  conditions:
  - last_transition_time: '2024-09-25T19:00:14+00:00'
    last_update_time: '2024-10-04T20:17:42+00:00'
    message: ReplicaSet "prometheus-grafana-556c95ff78" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  - last_transition_time: '2024-11-22T15:46:59+00:00'
    last_update_time: '2024-11-22T15:46:59+00:00'
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  observed_generation: 6
  ready_replicas: 1
  replicas: 1
  unavailable_replicas: null
  updated_replicas: 1
